{"remainingRequest":"D:\\tudu\\todo\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\tudu\\todo\\src\\views\\Todos.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\tudu\\todo\\src\\views\\Todos.vue","mtime":1663202619999},{"path":"D:\\tudu\\todo\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1663197127845},{"path":"D:\\tudu\\todo\\node_modules\\babel-loader\\lib\\index.js","mtime":1663197129389},{"path":"D:\\tudu\\todo\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1663197127845},{"path":"D:\\tudu\\todo\\node_modules\\vue-loader\\lib\\index.js","mtime":1663197129220}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport TodoList from '@/components/TodoList';\nimport AddTodo from '@/components/AddTodo';\nimport Loader from '@/components/Loader';\nexport default {\n  name: 'app',\n  data() {\n    return {\n      todos: [\n        { id: 1, title: 'Купить хлеб', completed: false },\n        { id: 2, title: 'Купить молоко', completed: false },\n        { id: 2, title: 'Купить мало', completed: false },\n      ],\n\n      filter: 'all',\n    };\n  },\n  computed: {\n    filteredTodos() {\n      if (this.filter === 'all') {\n        return this.todos;\n      }\n\n      if (this.filter === 'completed') {\n        return this.todos.filter((t) => !t.completed);\n      }\n\n      if (this.filter === 'not-completed') {\n        return this.todos.filter((t) => !t.completed);\n      }\n    },\n  },\n  methods: {\n    removeTodo(id) {\n      this.todos = this.todos.filter((t) => t.id !== id);\n    },\n    addTodo(todo) {\n      this.todos.push(todo);\n    },\n  },\n  components: {\n    TodoList,\n    AddTodo,\n    Loader,\n  },\n};\n",{"version":3,"sources":["Todos.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;AAoBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Todos.vue","sourceRoot":"src/views","sourcesContent":["<template>\n  <div>\n    <AddTodo @add-todo=\"addTodo\" />\n    <select v-model=\"filter\">\n      <option value=\"all\">Все</option>\n      <option value=\"completed\">Выполненные</option>\n      <option value=\"not-completed\">Не выполненные</option>\n    </select>\n    <hr />\n    <Loader v-if=\"loading\" />\n    <TodoList\n      v-else-if=\"filteredTodos.length\"\n      v-bind:todos=\"filteredTodos\"\n      @remove-todo=\"removeTodo\"\n    />\n    <p v-else>Нет задач!</p>\n  </div>\n</template>\n\n<script>\nimport TodoList from '@/components/TodoList';\nimport AddTodo from '@/components/AddTodo';\nimport Loader from '@/components/Loader';\nexport default {\n  name: 'app',\n  data() {\n    return {\n      todos: [\n        { id: 1, title: 'Купить хлеб', completed: false },\n        { id: 2, title: 'Купить молоко', completed: false },\n        { id: 2, title: 'Купить мало', completed: false },\n      ],\n\n      filter: 'all',\n    };\n  },\n  computed: {\n    filteredTodos() {\n      if (this.filter === 'all') {\n        return this.todos;\n      }\n\n      if (this.filter === 'completed') {\n        return this.todos.filter((t) => !t.completed);\n      }\n\n      if (this.filter === 'not-completed') {\n        return this.todos.filter((t) => !t.completed);\n      }\n    },\n  },\n  methods: {\n    removeTodo(id) {\n      this.todos = this.todos.filter((t) => t.id !== id);\n    },\n    addTodo(todo) {\n      this.todos.push(todo);\n    },\n  },\n  components: {\n    TodoList,\n    AddTodo,\n    Loader,\n  },\n};\n</script>\n"]}]}